library(randomForest)
library(rattle)
install.packages(rattle)
install.packages("rattle")
names(Titanic)
names(Titanic)
titanic=read.table(Titanic)
Titanic
edit(Titanic)
titanic=file.choose()
titanic
names(titanic)
titanic=file.choose(read.csv())
titanic=read.csv(file.choose)
titanic=read.csv(file.choose())
names(titanic)
summary(titanic)
table(titanic)
table(titanic)
names(titanic)
attach(titanic)
fit=rpart(Survived~Pclass+Age+Sex)
fit
system.time()
system.time(nrand(10000))
system.time(rand(10000))
system.time(fit=rpart(Survived~Pclass+Age+Sex))
fit
main="Classification Tree for MRC")
testplot <- plot(fit, uniform=TRUE,main="Classification Tree for MRC")
text(fit, use.n=TRUE, all=TRUE, cex=.8)
text(fit, use.n=TRUE, all=TRUE, cex=.5)
text(fit, use.n=TRUE, all=TRUE, cex=.8)
fit=rpart(Survived~Pclass+Age+Sex)
testplot <- plot(fit, uniform=TRUE,main="Classification Tree for MRC")
text(fit, use.n=TRUE, all=TRUE, cex=.8)
x=rnorm(3)
x
plot(x)
x=rnorm(100)
plot(x)
summary(x)
vignette("hclust")
search()
data(mtcars)
x
summary(x)
names(x)
head(x)
plot(x)
help(mtcars)
edit(x)
edit(mtcars)
for (i in 1:10) print("Hello")
while (i > 0) {print("Hello"); i <- i - 1}
while (i > 0) {print("Hello");
;
;}
}
while (i > 0) {print("Hello"); i=i+1
}
while (i > 0) {print("Hello"); i=i-1
}
i <- 10
while (i > 0) {print("Hello"); i=i-1
}
getwd()
setwd("C:\\Users\\saikrishnak\\Dropbox\\Kaggle\\Titanic\\Original Data")
getwd()
train_data=read.csv(train)
train_data=read.csv(train.csv)
train_data=read.csv(file.choose())
train_data
summary(train_data)
names(train_data)
attach(Age)
attach(train_data)
class(Age)
Age[is.na(Age)]
summar(Age)
summary(Age)
Age[is.na(Age)]=median(Age[!is.na(Age)])
summary(Age)
summary(train_data)
summary(train_data)
summary(Age)
summary(train_data)
Age[is.na(Age)]=median(Age[!is.na(Age)])
summary(Age)
plot(Age)
barplot(Age)
train_data$Age[is.na(Age)]=median(Age[!is.na(Age)])
summary(Age)
summary(train_data)
train_data$Age[is.na(train_data$Age)]=median(train_data$Age[!is.na(train_data$Age)])
summary(Age)
summary(train_data)
edit(train_data)
summary(train_data)
summary(Fare)
installed.packages("RandomForest")
installed.packages("randomForest")
installed.packages("randomForest")
library(randomForest)
train_rf=randomForest(train_data,Survived)
summary(train_data)
Names
summary(Names)
summary(Name)
names(train_data)
names(Cabin)
summary(Cabin)
edit(train_data)
summary(Cabin)
norm=function(x){
unlist(strsplit(x,""))[1]
}
}
}
norm("Cclass B")
norm("Cclass B sasd 123")
norm=function(x){
strsplit(x,"")[1]
}
norm("Cclass B sasd 123")
norm=function(x){
unlist(strsplit(x,""))[1]
}
norm("Cclass B sasd 123")
lapply(norm(Cabin))
lapply(Cabin,norm)
norm=function(x){
unlist(strsplit(x,""))[1]
}
norm("A B C")
norm=function(x){
unlist(strsplit(x," "))[1]
}
norm("A B C")
lapply(Cabin,norm)
lapply(as.character(Cabin),norm)
summary(Cabin)
norm(as.character("A B C"))
summary(Cabin)
norm(as.character("Aas Bas Cas"))
norm=function(x){
unlist(strsplit(x,""))[1]
}
norm(as.character("Aas Bas Cas"))
lapply(as.character(Cabin),norm)
summary(Cabin)
lapply(as.character(Cabin),norm)
Cabin1=lapply(as.character(Cabin),norm)
summary(Cabin1)
edit(Cabin1)
Cabin1=lapply(as.character(Cabin),norm)
lapply(as.character(Cabin),norm)
norm=function(x){
unlist(strsplit(x,""))[1]
}
norm(as.character("Aas Bas Cas"))
lapply(c("kk","aa","bb"),norm)
test=lapply(c("kk","aa","bb"),norm)
test
c("kk","aa","bb")
norm(as.character("Aas Bas Cas"))
test=lapply(c("kk","aa","bb"),norm)
test
for(i in Cabin){
norm(Cabin[i])
return norm(Cabin[i])
for(i in Cabin){
norm(Cabin[i])
}
for(i in Cabin){
print i
}
for(i in Cabin){
return i
}
length(Cabin)
summary(train_data)
dim(train_data)
for(i in length(Cabin)){
return i
}
source('~/.active-rstudio-document', echo=TRUE)
for(i in length(Cabin)){
return Cabin[i,]
for(i in length(Cabin)){
Cabin[i,]
}
for(i in length(Cabin)){
Cabin[i]
}
for(i in length(Cabin)){
print Cabin[i]
return(Cabin[i])
norm=function(x,print=TRUE){
unlist(strsplit(x,""))[1]
}
norm(as.character("Aas Bas Cas"))
norm(as.character("Aas Bas Cas"))
for(i in length(Cabin)){
Cabin[i]
}
for(i in length(Cabin)){
Cabin[i]
print(i)
}
for(i in length(Cabin)){
Cabin[i]
print(Cabin[i])
}
for(i in length(Cabin)){
Cabin[i]=norm(Cabin[i])
print(Cabin[i])
}
for(i in length(Cabin)){
Cabin[i]=norm(as.character(Cabin[i]))
print(Cabin[i])
}
summary(Cabin)
Cabin1[i]=norm(as.character(Cabin[i]))
print(Cabin[i])
test=lapply(c("A10","aa","bb"),norm)
norm(c("A10","aa","bb"))
norm(c("A10")
test
norm(c("A10"))
norm(as.character("Aas Bas Cas"))
print(norm(as.character(Cabin[i]))
print(Cabin[i])
for(i in length(Cabin)){
print(norm(as.character(Cabin[i]))
print(Cabin[i])
}
for(i in length(Cabin)){
print(norm(as.character(Cabin[i])))
print(Cabin[i])
}
for(i in length(Cabin)){
# print(norm(as.character(Cabin[i])))
print(Cabin[i])
}
for(i in length(Cabin)){
# print(norm(as.character(Cabin[i])))
Cabin[i]
}
print(Cabin[i])
}
for(i in length(Cabin)){
# print(norm(as.character(Cabin[i])))
print(Cabin[i])
}
for(i in length(Cabin)){
# print(norm(as.character(Cabin[i])))
if(is.na(Cabin[i]){
Cabin[i]="X"
for(i in length(Cabin)){
# print(norm(as.character(Cabin[i])))
if(is.na(Cabin[i]){
if(is.na(Cabin[i]){
train_data$Cabin[is.na(train_data$Cabin)]="X"
Cabin
is.na(Cabin)
summary(Cabin)
for(i in length(Cabin)){
print(norm(Cabin[i])
}
for(i in length(Cabin)){
print(norm(Cabin[i]))
}
norm=function(as.character(x){
unlist(strsplit(x,""))[1]
}
norm=function(x){
unlist(strsplit(as.character(x),""))[1]
}
norm("Aas Bas Cas")
for(i in length(Cabin)){
print(norm(Cabin[i]))
}
for(i in length(Cabin)){
print(norm(Cabin[i]))
}
summary(Cabin)
for(i in length(Cabin)){
print(norm(Cabin[i]))
}
summary(Survived)
Survived
class(Survived)
train_data$Survived=as.factor(train_data$Survived)
class(Survived)
class(as.factor(Survived))
train_data$Survived=as.factor(train_data$Survived)
class(as.factor(Survived))
class(train_data$Survived)
detach(train_data)
Age
train_data[,c(1)]
train_data[,c(0)]
names(train_data)
train_rf=randomForest(train_data[,-c(4,9,11)],train_data$Survived)
plot(train_rf)
varImpPlot(train_rf)
train_data$Survived=as.factor(train_data$Survived)
train_rf=randomForest(train_data[,-c(4,9,11,2)],train_data$Survived)
varImpPlot(train_rf)
train_rf
getTree(train_rf)
plot(getTree(train_rf))
titanic_train=read.csv(file.choose())
titanic_train$Survived=as.factor(titanic_train$Survived)
names(titanic_train)
summary(train_data)
summary(train_data)
names(train_data)
names(titanic_train)
train_rf=randomForest(train_data[,-c(5,10,12)],train_data$Survived)
names(titanic_train)
train_rf=randomForest(train_data[,-c(5,10,12,3)],train_data$Survived)
names(titanic_train)
edit(titanic_train)
train_rf=randomForest(train_data[,-c(1,5,10,12,3)],train_data$Survived)
edit(titanic_train)
names(titanic_train)
summay(train_data[,c(15))
summay(train_data[,c(15)])
summary(train_data[,c(15)])
summary(train_data[,c(14)])
summary(train_data[,c(13)])
summary(train_data[,c(1)])
summary(train_data[,c(11)])
summary(train_data[,c(13)])
summary(train_data[,c(14)])
summary(train_data[,c(13)])
summary(train_data[,c(12)])
summary(train_data[,c(13)])
summary(train_data)
names(train_data)
train_rf=randomForest(train_data[,-c(4,9,11,2)],train_data$Survived)
varImpPlot(train_rf)
train_rf
train_data=read.csv(file.choose())
summary(train_data)
names(train_data)
titanic_train
varImpPlot(train_rf)
names(titanic_train)
train_rf
class(Age)
edit(titanic_train)
summary(titanic_train$Age)
titanic_train=read.csv(file.choose())
titanic_train=read.csv(file.choose())
train_rf
titanic_train=read.csv(file.choose())
edit(titanic_train)
titanic_train$Survived=as.factor(titanic_train$Survived)
summary(titanic_train$Age)
names(titanic_train)
train_rf=randomForest(train_data[,-c(4,9,11)],train_data$Survived)
train_rf
varImpPlot(train_rf)
train_rf=randomForest(train_data[,-c(4,9,11,2)],train_data$Survived)
train_rf
varImpPlot(train_rf)
train_rf
varImpPlot(train_rf)
train_rf
train_rf=randomForest(train_data[,-c(4,9,11,2)],train_data$Survived)
names(train_data)
setwd("C:\\Users\\saikrishnak\\Dropbox\\Kaggle\\Titanic\\Original Data")
train_data=read.csv(file.choose())
summary(train_data)
names(train_data)
dim(train_data)
attach(train_data)
class(Age)
train_data$Age[is.na(train_data$Age)]=median(train_data$Age[!is.na(train_data$Age)])
summary(Fare)
train_data$Survived=as.factor(train_data$Survived)
train_rf=randomForest(train_data[,-c(4,9,11,2)],train_data$Survived)
names(train_data)
train_rf=randomForest(train_data[,-c(4,9,11,2,14)],train_data$Survived)
names(train_data)
train_rf
train_rf=randomForest(train_data[,-c(4,9,11,2)],train_data$Survived)
names(train_data)
train_rf=randomForest(train_data[,-c(4,9,11,2,14,15)],train_data$Survived)
names(train_data)
train_rf
varImpPlot(train_rf)
train_rf=randomForest(train_data[,-c(4,9,11,2)],train_data$Survived)
names(train_data)
train_rf=randomForest(train_data[,-c(4,9,11,2)],train_data$Survived)
train_rf
train_rf=randomForest(train_data[,-c(4,9,11,2,14,15)],train_data$Survived)
names(train_data)
train_rf
varImpPlot(train_rf)
names(train_data)
train_rf=randomForest(train_data[,-c(4,9,11,2,14)],train_data$Survived)
names(train_data)
train_rf
train_rf=randomForest(train_data[,-c(4,9,11,2,14,15)],train_data$Survived)
names(train_data)
train_rf
varImpPlot(train_rf)
train_rf=randomForest(train_data[,-c(4,9,11,2)],train_data$Survived)
train_data=read.csv(file.choose())
summary(train_data)
names(train_data)
dim(train_data)
train_data$Age[is.na(train_data$Age)]=median(train_data$Age[!is.na(train_data$Age)])
names(train_data)
train_data$Survived=as.factor(train_data$Survived)
train_rf=randomForest(train_data[,-c(4,9,11,2)],train_data$Survived)
names(train_data)
train_rf=randomForest(train_data[,-c(4,9,11,2)],train_data$Survived)
train_rf
varImpPlot(train_rf)
?randomForest
titanic_train=read.csv(file.choose())
titanic_train=read.csv(file.choose())
titanic_train$Survived=as.factor(titanic_train$Survived)
summary(titanic_train$Age)
names(titanic_train)
train_rf1=randomForest(train_data[,-c(4,9,11,2,14)],train_data$Survived)
train_rf1
train_rf1
varImpPlot(train_rf1)
names(titanic_train)
train_rf1=randomForest(train_data[,-c(4,9,11,2,14,15)],train_data$Survived)
train_rf1
setwd("C:\\Users\\saikrishnak\\Dropbox\\Kaggle\\Titanic\\Original Data")
train_data=read.csv(file.choose())
summary(train_data)
names(train_data)
summary(train_data)
names(train_data)
dim(train_data)
train_data$Age[is.na(train_data$Age)]=median(train_data$Age[!is.na(train_data$Age)])
names(train_data)
train_data$Age[is.na(train_data$Age)]=median(train_data$Age[!is.na(train_data$Age)])
train_data$Survived=as.factor(train_data$Survived)
train_rf=randomForest(train_data[,-c(4,9,11,2)],train_data$Survived)
train_rf
train_rf1
summary(train_data)
train_rf1
train_rf
train_data=read.csv(file.choose())
summary(train_data)
train_data=read.csv(file.choose())
test_data=read.csv(file.choose())
test_data=read.csv(file.choose())
summary(test_data)
names(test_data)
summary(test_data)
test_data$Age[is.na(test_data$Age)]=median(test_data$Age[!is.na(test_data$Age)])
test_data$Fare[is.na(test_data$Fare)]=median(test_data$Fare[!is.na(test_data$Fare)])
test_data$Survived=as.factor(test_data$Survived)
summary(test_data)
names(test_data)
train_rf
predict_test=predict(train_rf,test_data)
test_rf$Survived <- predict(train_rf, newdata=test_data, type=’class’)
test_rf$Survived <- predict(train_rf, newdata=test_data)
test_data=read.csv(file.choose())
summary(test_data)
names(test_data)
## Fill in the Missing Values Of Age
test_data$Age[is.na(test_data$Age)]=median(test_data$Age[!is.na(test_data$Age)])
## Fill in the missing values for Fare
test_data$Fare[is.na(test_data$Fare)]=median(test_data$Fare[!is.na(test_data$Fare)])
test_rf$Survived <- predict(train_rf, newdata=test_data)
test_rf$Survived <- predict(train_rf, test_data)
summary(test_data)
names(test_data)
test_rf=randomForest(test_data[,-c(4,9,11)],test_data$Survived)
names(test_data)
test_rf=randomForest(test_data[,-c(4,9,11)],test_data$Survived)
summary(test_data)
test_rf=randomForest(test_data[,-c(4,9,11,2)],test_data$Survived)
test_data$Age[is.na(test_data$Age)]=median(test_data$Age[!is.na(test_data$Age)])
## Fill in the missing values for Fare
test_data$Fare[is.na(test_data$Fare)]=median(test_data$Fare[!is.na(test_data$Fare)])
test_rf=randomForest(test_data[,-c(4,9,11,2)],test_data$Survived)
summary(test_data)
test_rf$Survived <- predict(train_rf, test_data)
test_rf$Survived <- predict(train_rf, test_data[,-c(4,9,11,2)])
importance(train_rf)
install.packages("rmr2")
rmr.options(backend="local")
rmr.options(backend="local")
library(rmr2)
library(rmr)
library("rmr2")
rmr.options(backend="local")
?rmr2
install.packages("rmr2")
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
updateR()
install.R()
